C51 COMPILER V9.54   OLED                                                                  08/27/2023 22:13:38 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: D:\Program Files\Keil_v5_C51\C51\BIN\C51.EXE Users\oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Users) 
                    -DEBUG OBJECTEXTEND PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          /********************************************************************************
   2            * 文 件 名: oled.c
   3            * 版 本 号: 初版
   4            * 修改作者: 佚名
   5            * 修改日期: 2023年08月24日
   6            * 功能介绍:          
   7            ******************************************************************************
   8            * 注意事项:
   9          *********************************************************************************/
  10          
  11          #include "oled.h"
  12          #include "oledfont.h"    
  13          //OLED的显存
  14          //存放格式如下.
  15          //[0]0 1 2 3 ... 127  
  16          //[1]0 1 2 3 ... 127  
  17          //[2]0 1 2 3 ... 127  
  18          //[3]0 1 2 3 ... 127  
  19          //[4]0 1 2 3 ... 127  
  20          //[5]0 1 2 3 ... 127  
  21          //[6]0 1 2 3 ... 127  
  22          //[7]0 1 2 3 ... 127
  23          /************************************************
  24          函数名称  :   delay_ms
  25          功    能  :   延时xms
  26          参    数  :   x
  27          返 回 值  :   无
  28          *************************************************/
  29          void delay_ms(unsigned int ms)
  30          {                         
  31   1        unsigned int a;
  32   1        while(ms)
  33   1        {
  34   2          a=1800;
  35   2          while(a--);
  36   2          ms--;
  37   2        }
  38   1        return;
  39   1      }
  40          
  41          /************************************************
  42          函数名称  :   I2C_delay
  43          功    能  :   I2C延时
  44          参    数  :   无
  45          返 回 值  :   无
  46          *************************************************/
  47          static void I2C_delay(void)
  48          {
  49   1        u8 t=1;
  50   1        while(t--);
  51   1      }
  52          
  53          /************************************************
  54          函数名称  :   I2C_Start
C51 COMPILER V9.54   OLED                                                                  08/27/2023 22:13:38 PAGE 2   

  55          功    能  :   发送I2C开始信号
  56          参    数  :   无
  57          返 回 值  :   无
  58          *************************************************/
  59          static void I2C_Start(void)
  60          {
  61   1        OLED_SDA_Set();
  62   1        OLED_SCL_Set();
  63   1        //I2C_delay();
  64   1        OLED_SDA_Clr();
  65   1        //I2C_delay();
  66   1        OLED_SCL_Clr();
  67   1         
  68   1      }
  69          
  70          /************************************************
  71          函数名称  :   I2C_Stop
  72          功    能  :   发送I2C结束信号
  73          参    数  :   无
  74          返 回 值  :   无
  75          *************************************************/
  76          static void I2C_Stop(void)
  77          {
  78   1        OLED_SDA_Clr();
  79   1        OLED_SCL_Set();
  80   1        //I2C_delay();
  81   1        OLED_SDA_Set();
  82   1      }
  83          
  84          /************************************************
  85          函数名称  :   I2C_WaitAck
  86          功    能  :   等待应答信号
  87          参    数  :   无
  88          返 回 值  :   无
  89          *************************************************/
  90          static void I2C_WaitAck(void) //测数据信号的电平
  91          {
  92   1        OLED_SDA_Set();
  93   1        //I2C_delay();
  94   1        OLED_SCL_Set();
  95   1        //I2C_delay();
  96   1        OLED_SCL_Clr();
  97   1        //I2C_delay();
  98   1      }
  99          
 100          /************************************************
 101          函数名称  :   Send_Byte
 102          功    能  :   I2C传输一个字节（只包含数据）
 103          参    数  :   dat:数据
 104          返 回 值  :   无
 105          *************************************************/
 106          static void Send_Byte(u8 dat)
 107          {
 108   1        u8 i;
 109   1        for(i=0;i<8;i++)
 110   1        {
 111   2          OLED_SCL_Clr();//将时钟信号设置为低电平
 112   2          if(dat&0x80)//将dat的8位从最高位依次写入
 113   2          {
 114   3            OLED_SDA_Set();
 115   3          }
 116   2          else
C51 COMPILER V9.54   OLED                                                                  08/27/2023 22:13:38 PAGE 3   

 117   2          {
 118   3            OLED_SDA_Clr();
 119   3          }
 120   2          //I2C_delay();
 121   2          OLED_SCL_Set();
 122   2          //I2C_delay();
 123   2          OLED_SCL_Clr();
 124   2          dat<<=1;
 125   2        }
 126   1      }
 127          
 128          /************************************************
 129          函数名称  :   OLED_WR_Byte
 130          功    能  :   I2C发送一个字节的命令/数据（包含起止信号）
 131          参    数  :   dat:数据
 132          参    数  :   mode:数据/命令标志
 133              取 值 :   OLED_CMD,表示命令;
 134                        OLED_DATA,表示数据;
 135          返 回 值  :   无
 136          *************************************************/
 137          static void OLED_WR_Byte(u8 dat,u8 mode)
 138          {
 139   1        I2C_Start();
 140   1        Send_Byte(0x78);
 141   1        I2C_WaitAck();
 142   1        if(mode){Send_Byte(0x40);}
 143   1        else{Send_Byte(0x00);}
 144   1        I2C_WaitAck();
 145   1        Send_Byte(dat);
 146   1        I2C_WaitAck();
 147   1        I2C_Stop();
 148   1      }
 149          
 150          /************************************************
 151          函数名称  :   OLED_ColorTurn
 152          功    能  :   设置屏幕反显
 153          参    数  :   i:0:关闭;1:开启
 154          返 回 值  :   无
 155          *************************************************/
 156          void OLED_ColorTurn(u8 i)
 157          {
 158   1        if(i==0)
 159   1          {
 160   2            OLED_WR_Byte(0xA6,OLED_CMD);//正常显示
 161   2          }
 162   1        if(i==1)
 163   1          {
 164   2            OLED_WR_Byte(0xA7,OLED_CMD);//反色显示
 165   2          }
 166   1      }
 167          
 168          /************************************************
 169          函数名称  :   OLED_DisplayTurn
 170          功    能  :   屏幕旋转180度
 171          参    数  :   i:0:关闭;1:开启
 172          返 回 值  :   无
 173          *************************************************/
 174          void OLED_DisplayTurn(u8 i)
 175          {
 176   1        if(i==0)
 177   1          {
 178   2            OLED_WR_Byte(0xC8,OLED_CMD);//正常显示
C51 COMPILER V9.54   OLED                                                                  08/27/2023 22:13:38 PAGE 4   

 179   2            OLED_WR_Byte(0xA1,OLED_CMD);
 180   2          }
 181   1        if(i==1)
 182   1          {
 183   2            OLED_WR_Byte(0xC0,OLED_CMD);//反转显示
 184   2            OLED_WR_Byte(0xA0,OLED_CMD);
 185   2          }
 186   1      }
 187          
 188          /************************************************
 189          函数名称  :   OLED_Set_Pos
 190          功    能  :   设置坐标
 191          参    数  :   x,y
 192          返 回 值  :   无
 193          *************************************************/
 194          void OLED_Set_Pos(u8 x, u8 y) 
 195          { 
 196   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
 197   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 198   1        OLED_WR_Byte((x&0x0f),OLED_CMD);
 199   1      }       
 200          
 201          /************************************************
 202          函数名称  :   OLED_Display_On
 203          功    能  :   开启OLED显示
 204          参    数  :   无
 205          返 回 值  :   无
 206          *************************************************/
 207          void OLED_Display_On(void)
 208          {
 209   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 210   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 211   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 212   1      }
 213          
 214          /************************************************
 215          函数名称  :   OLED_Display_Off
 216          功    能  :   关闭OLED显示     
 217          参    数  :   无
 218          返 回 值  :   无
 219          *************************************************/
 220          void OLED_Display_Off(void)
 221          {
 222   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 223   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 224   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 225   1      }            
 226          
 227          /************************************************
 228          函数名称  :   OLED_Clear
 229          功    能  :   清屏函数,清完屏,整个屏幕是黑色的,和没点亮一样
 230          参    数  :   无
 231          返 回 值  :   无
 232          *************************************************/
 233          void OLED_Clear(void)  
 234          {  
 235   1        u8 i,n;       
 236   1        for(i=0;i<8;i++)  
 237   1        {  
 238   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 239   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 240   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
C51 COMPILER V9.54   OLED                                                                  08/27/2023 22:13:38 PAGE 5   

 241   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 242   2        } //更新显示
 243   1      }
 244          
 245          //在指定位置显示一个字符,包括部分字符
 246          //x:0~127
 247          //y:     
 248          //sizey:选择字体 6x8  8x16
 249          /************************************************
 250          函数名称  :   OLED_ShowChar
 251          功    能  :   在指定位置显示一个字符,包括部分字符
 252          参    数  :   x       y     坐标
 253              取 值 :   0~127   0~63    
 254          参    数  :   chr:字符
 255          参    数  :   sizey:选择字体
 256              取 值 :    6x8  8x16
 257          返 回 值  :   无
 258          *************************************************/
 259          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 sizey)
 260          {       
 261   1        u8 c=0,sizex=sizey/2;
 262   1        u16 i=0,size1;
 263   1        if(sizey==8)size1=6;
 264   1        else size1=(sizey/8+((sizey%8)?1:0))*(sizey/2);
 265   1        c=chr-' ';//得到偏移后的值
 266   1        OLED_Set_Pos(x,y);
 267   1        for(i=0;i<size1;i++)
 268   1        {
 269   2          if(i%sizex==0&&sizey!=8) OLED_Set_Pos(x,y++);
 270   2          if(sizey==8) OLED_WR_Byte(asc2_0806[c][i],OLED_DATA);//6X8字号
 271   2          else if(sizey==16) OLED_WR_Byte(asc2_1608[c][i],OLED_DATA);//8x16字号
 272   2      //    else if(sizey==xx) OLED_WR_Byte(asc2_xxxx[c][i],OLED_DATA);//用户添加字号
 273   2          else return;
 274   2        }
 275   1      }
 276          
 277          /************************************************
 278          函数名称  :   oled_pow
 279          功    能  :   计算m^n
 280          参    数  :   m,n
 281          返 回 值  :   无
 282          *************************************************/
 283          static u32 oled_pow(u8 m,u8 n)
 284          {
 285   1        u32 result=1;  
 286   1        while(n--)result*=m;    
 287   1        return result;
 288   1      }         
 289          
 290          /************************************************
 291          函数名称  :   OLED_ShowNum
 292          功    能  :   显示数字
 293          参    数  :   x,y :起点坐标
 294                        num:要显示的数字
 295                        len :数字的位数
 296                        sizey:字体大小      
 297          返 回 值  :   无
 298          *************************************************/
 299          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 sizey)
 300          {           
 301   1        u8 t,temp,m=0;
 302   1        u8 enshow=0;
C51 COMPILER V9.54   OLED                                                                  08/27/2023 22:13:38 PAGE 6   

 303   1        if(sizey==8)m=2;
 304   1        for(t=0;t<len;t++)
 305   1        {
 306   2          temp=(num/oled_pow(10,len-t-1))%10;
 307   2          if(enshow==0&&t<(len-1))
 308   2          {
 309   3            if(temp==0)
 310   3            {
 311   4              OLED_ShowChar(x+(sizey/2+m)*t,y,' ',sizey);
 312   4              continue;
 313   4            }else enshow=1;
 314   3          }
 315   2          OLED_ShowChar(x+(sizey/2+m)*t,y,temp+'0',sizey);
 316   2        }
 317   1      }
 318          
 319          /************************************************
 320          函数名称  :   OLED_ShowString
 321          功    能  :   显示字符串
 322          参    数  :   x,y :起点坐标
 323                        chr:要显示的字符串
 324                        sizey:字符串长度
 325          返 回 值  :   无
 326          *************************************************/
 327          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 sizey)
 328          {
 329   1        u8 j=0;
 330   1        while (chr[j]!='\0')
 331   1        {   
 332   2          OLED_ShowChar(x,y,chr[j++],sizey);
 333   2          if(sizey==8)x+=6;
 334   2          else x+=sizey/2;
 335   2        }
 336   1      }
 337          
 338          /************************************************
 339          函数名称  :   OLED_ShowChinese
 340          功    能  :   显示汉字
 341          参    数  :   x,y :起点坐标
 342                        no:中文字的字库编号
 343                        sizey:字符字号
 344          返 回 值  :   无
 345          *************************************************/
 346          void OLED_ShowChinese(u8 x,u8 y,u8 no,u8 sizey)
 347          {
 348   1        u16 i,size1=(sizey/8+((sizey%8)?1:0))*sizey;
 349   1        for(i=0;i<size1;i++)
 350   1        {
 351   2          if(i%sizey==0) OLED_Set_Pos(x,y++);
 352   2          if(sizey==16) OLED_WR_Byte(Hzk[no][i],OLED_DATA);//16x16字号
 353   2      //    else if(sizey==xx) OLED_WR_Byte(xxx[c][i],OLED_DATA);//用户添加字号
 354   2          else return;
 355   2        }       
 356   1      }
 357          
 358          /************************************************
 359          函数名称  :   OLED_DrawBMP
 360          功    能  :   显示图片
 361          参    数  :   x,y显示坐标
 362                        sizex,sizey,图片长宽
 363                        BMP：要显示的图片
 364          返 回 值  :   无
C51 COMPILER V9.54   OLED                                                                  08/27/2023 22:13:38 PAGE 7   

 365          *************************************************/
 366          void OLED_DrawBMP(u8 x,u8 y,u8 sizex, u8 sizey,u8 BMP[])
 367          {   
 368   1        u16 j=0;
 369   1        u8 i,m;
 370   1        sizey=sizey/8+((sizey%8)?1:0);
 371   1        for(i=0;i<sizey;i++)
 372   1        {
 373   2          OLED_Set_Pos(x,i+y);
 374   2          for(m=0;m<sizex;m++)
 375   2          {      
 376   3            OLED_WR_Byte(BMP[j++],OLED_DATA);       
 377   3          }
 378   2        }
 379   1      } 
 380          
 381          /************************************************
 382          函数名称  :   OLED_Init
 383          功    能  :   初始化屏幕
 384          参    数  :   无
 385          返 回 值  :   无
 386          *************************************************/      
 387          void OLED_Init(void)
 388          {
 389   1        OLED_RES_Clr();
 390   1        delay_ms(200);
 391   1        OLED_RES_Set();
 392   1        
 393   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 394   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 395   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 396   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 397   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 398   1        OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 399   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 400   1        OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 401   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 402   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 403   1        OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 404   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 405   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 406   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 407   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 408   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 409   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 410   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 411   1        OLED_WR_Byte(0x12,OLED_CMD);
 412   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 413   1        OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 414   1        OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 415   1        OLED_WR_Byte(0x02,OLED_CMD);//
 416   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 417   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 418   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 419   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 420   1        OLED_Clear();
 421   1        OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 422   1      }
 423          
 424          
 425          
 426          
C51 COMPILER V9.54   OLED                                                                  08/27/2023 22:13:38 PAGE 8   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1099    ----
   CONSTANT SIZE    =   2296    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      46
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
