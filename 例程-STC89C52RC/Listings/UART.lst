C51 COMPILER V9.54   UART                                                                  08/27/2023 04:11:52 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\UART.obj
COMPILER INVOKED BY: D:\Program Files\Keil_v5_C51\C51\BIN\C51.EXE Users\UART.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Users) 
                    -DEBUG OBJECTEXTEND PRINT(.\Listings\UART.lst) TABS(2) OBJECT(.\Objects\UART.obj)

line level    source

   1          /********************************************************************************
   2            * 文 件 名: UART.c
   3            * 版 本 号: 初版
   4            * 修改作者: Smoaflie
   5            * 修改日期: 2023年08月27日
   6            * 功能介绍: 配置及使用51单片机的UART功能         
   7            ******************************************************************************
   8            * 注意事项: 该代码遵守 GPL3.0开源协议，仅供学习参考，禁止商用
   9          *********************************************************************************/
  10          
  11          #include "UART.h"
  12          
  13          static u8 xdata UART_RX_BUF[UART_MAX_RECV_LEN]; //存储接收数据 
  14          static u16 UART_RX_STA = 0x0000;  //标志接收状态
  15          static u8 UART_TX_FLAG = 0; //标志发送状态
  16          
  17          /************************************************
  18          函数名称  :   UART_Init
  19          功    能  :   初始化UART功能并设置波特率
  20          参    数  :   baud_rate:波特率
  21          返 回 值  :   无
  22          *************************************************/
  23          void UART_Init(u16 baud_rate)
  24          {
  25   1        /* 配置串行口的通信方式 */
  26   1        SCON &= ~(0x01 << 7);
  27   1        SCON |= (0x01 << 6);
  28   1        REN = 1;  //开启串行接收
  29   1        
  30   1        /* 配置定时器1 */
  31   1        TMOD &= 0x0F;   //设置定时器模式
  32   1        TMOD |= 0x20;   //设置定时器模式
  33   1      
  34   1        /* 配置波特率 */
  35   1        PCON |= 0x80;   //使能波特率倍速位SMOD
  36   1      
  37   1        TL1 = TH1 = (256 - 57600/baud_rate);  //设置波特率
  38   1      
  39   1        /* 配置相关中断 */
  40   1        EA = 1;     //开启中断总线
  41   1        ET1 = 0;    //关闭定时器1中断
  42   1        
  43   1        IP |= 0X10;   //设置串行口中断为高优先级
  44   1        ES = 1;     //开启串行口中断
  45   1        
  46   1        /* 配置结束 */
  47   1        TR1 = 1;    //定时器1开始计时
  48   1      }
  49          
  50          /************************************************
  51          函数名称  :   Timer0Init
  52          功    能  :   初始化定时器0：16位模式，10ms@11.0592MHz
  53          参    数  :   无
  54          返 回 值  :   无
C51 COMPILER V9.54   UART                                                                  08/27/2023 04:11:52 PAGE 2   

  55          *************************************************/
  56          void Timer0Init(void)
  57          {
  58   1        /* 设置定时器模式 */
  59   1        TMOD &= 0xF0; 
  60   1        TMOD |= 0x01; 
  61   1        /* 设置超时时间 */
  62   1        TL0 = 0x00;   //设置定时初始值
  63   1        TH0 = 0xDC;   //设置定时初始值
  64   1        /* 配置定时器0中断 */
  65   1        PT0 = 1;    //设置高优先级
  66   1        ET0 = 1;    //定时器0中断开启
  67   1        
  68   1        TR0 = 0;    //关闭定时器0
  69   1      }
  70          
  71          /************************************************
  72          函数名称  :   UART_SendByte
  73          功    能  :   串口发送一个字节
  74          参    数  :   ucch：字节
  75          返 回 值  :   无
  76          *************************************************/
  77          void UART_SendByte(u8 ucch)
  78          {
  79   1        SBUF = ucch;
  80   1        while(UART_TX_FLAG==0&&TI==0);
  81   1        UART_TX_FLAG=0;TI=0;
  82   1      }
  83          
  84          /************************************************
  85          函数名称  :   UART_SendStr
  86          功    能  :   串口发送字符串
  87          参    数  :   ucstr：字符串
  88          返 回 值  :   无
  89          *************************************************/
  90          void UART_SendStr(u8 *ucstr)
  91          {
  92   1        while(ucstr && *ucstr)        // 地址为空或者值为空跳出
  93   1        {
  94   2          UART_SendByte(*ucstr++);
  95   2        }
  96   1      }
  97          
  98          /************************************************
  99          函数名称  :   UART_Isr
 100          功    能  :   串口中断服务函数
 101          参    数  :   无
 102          返 回 值  :   无
 103          *************************************************/
 104          void UART_Isr(void) interrupt 4 using 1
 105          {
 106   1        //接收中断触发
 107   1        if(RI)
 108   1        {
 109   2          u8 Res;
 110   2          Res = SBUF;
 111   2          RI = 0;
 112   2          if((UART_RX_STA & (1<<15)) == 0)  //接收未完成
 113   2          {
 114   3            if(UART_RX_STA < UART_MAX_RECV_LEN) //还可以接收数据
 115   3            {
 116   4              /* 重置超时时间 */
C51 COMPILER V9.54   UART                                                                  08/27/2023 04:11:52 PAGE 3   

 117   4              TL0 = 0x00;   //设置定时初始值
 118   4              TH0 = 0xDC;   //设置定时初始值
 119   4              
 120   4              if(!UART_RX_STA)
 121   4              {
 122   5                TR0 = 1;  //打开定时器0
 123   5              }
 124   4              UART_RX_BUF[UART_RX_STA++] = Res; //记录接收到的值
 125   4            }
 126   3            else
 127   3            {
 128   4              UART_RX_STA |=1<<15;  //强制标记接收完成
 129   4            }
 130   3          }
 131   2          //SBUF = Res; //该语句是为了将AS608回应的数据呈现在电脑中，方便调试
 132   2        }
 133   1        
 134   1        if(TI)
 135   1        {
 136   2          TI = 0;
 137   2          UART_TX_FLAG = 1;//标志传输完成
 138   2        }
 139   1      }
 140          
 141          /************************************************
 142          函数名称  :   on_timeout
 143          功    能  :   (定时器0中断服务函数)等待时间超时处理函数
 144          参    数  :   无
 145          返 回 值  :   无
 146          *************************************************/
 147          void on_timeout(void) interrupt 1
 148          {
 149   1        
 150   1        UART_RX_STA|=1<<15; //标记接收完成
 151   1        TR0 = 0;    //关闭定时器0
 152   1        /* 重置超时时间 */
 153   1        TL0 = 0x00;   //设置定时初值
 154   1        TH0 = 0xDC;   //设置定时初值
 155   1        
 156   1        /* 将数据传给AS608函数判断 */
 157   1        AS608_JudgeData(UART_RX_BUF);
 158   1        
 159   1        /* 重置接收器 */
 160   1        UART_RX_STA = 0x00;
 161   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    306    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     50    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
